stages:
  - build
  - init_deploy
  - deploy

variables:
  DEPLOY_TARGET: $DEPLOY_TARGET
  STAGING_SFTP_URL: $STAGING_SFTP_URL
  STAGING_SFTP_USER: $STAGING_SFTP_USER
  STAGING_SFTP_PASS: $STAGING_SFTP_PASS
  PROD_SFTP_URL: $PROD_SFTP_URL
  PROD_SFTP_USER: $PROD_SFTP_USER
  PROD_SFTP_PASS: $PROD_SFTP_PASS
  SSH_PASSWORD: $SSH_PASSWORD
  SERVER_ADDRESS: $SERVER_ADDRESS
  WHM_ACCOUNT_NAME: $WHM_ACCOUNT_NAME

build:
  stage: build
  image: wordpress:php7.4-apache
  artifacts:
    untracked: true
  rules:
    - if: $DEPLOY_TARGET != "wpengine"
      when: on_success
      allow_failure: false
  script:
    - |
      (ls public_html | grep -q .) || (echo "Only Theme present in Repo, old site no need to build, exiting...") && exit
      echo "Building Site..."
      curl --silent --output /usr/local/bin/wp https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
      chmod a+x \
        /usr/local/bin/wp \
        ./docker/wait-for-mysql \
        ./docker/wait-for-mysql.php && \
      wp --allow-root --version
      cd public_html
      wp core download --allow-root
      echo "Site Built!"

deploy-staging:
  stage: deploy
  rules:
    - if: $DEPLOY_TARGET == "wpengine"
      when: on_success
      allow_failure: false
  script:
    - which sftp || ( apt-get update -y && apt-get install sftp -y )
    - echo "SFTP installed!"
    - which sshpass || ( apt-get update -y && apt-get install sshpass -y )
    - echo "sshpass installed!"
    - export THEME_PATH=$(find . -type f -name 'gulpfile.js' -not \( -path */node_modules/* -prune \) -print -quit | sed 's/gulpfile.js//')
    - cd $THEME_PATH && export THEME_NAME=${PWD##*/} && rm -rf acf-json && rm -rf node_modules && cd ..
    - sshpass -p $STAGING_SFTP_PASS sftp -oStrictHostKeyChecking=no -v -P 2222 $STAGING_SFTP_USER@$STAGING_SFTP_URL:/wp-content/themes/ <<< $"mkdir "$THEME_NAME""
    - sshpass -p $STAGING_SFTP_PASS sftp -oStrictHostKeyChecking=no -v -P 2222 $STAGING_SFTP_USER@$STAGING_SFTP_URL:/wp-content/themes/ <<< $"put -r "$THEME_NAME""
    
deploy-prod-wpengine:
  stage: deploy
  dependencies:
    - deploy-staging
  rules:
    - if: $DEPLOY_TARGET == "wpengine"
      when: manual
      allow_failure: false
  script:
    - which sftp || ( apt-get update -y && apt-get install sftp -y )
    - echo "SFTP installed!"
    - which sshpass || ( apt-get update -y && apt-get install sshpass -y )
    - echo "sshpass installed!"
    - export THEME_PATH=$(find . -type f -name 'gulpfile.js' -not \( -path */node_modules/* -prune \) -print -quit | sed 's/gulpfile.js//')
    - cd $THEME_PATH && export THEME_NAME=${PWD##*/} && rm -rf acf-json && rm -rf node_modules && cd ..
    - sshpass -p $PROD_SFTP_PASS sftp -oStrictHostKeyChecking=no -v -P 2222 $PROD_SFTP_USER@$PROD_SFTP_URL:/wp-content/themes/ <<< $"mkdir "$THEME_NAME""
    - sshpass -p $PROD_SFTP_PASS sftp -oStrictHostKeyChecking=no -v -P 2222 $PROD_SFTP_USER@$PROD_SFTP_URL:/wp-content/themes/ <<< $"put -r "$THEME_NAME""

deploy-first-build:
  stage: init_deploy
  image: ubuntu
  dependencies:
    - build
  rules:
    - if: $DEPLOY_TARGET != "wpengine"
      when: on_success
      allow_failure: false
  script:
    - |
      which sshpass || ( apt-get update -y && apt-get install sshpass -y )
      echo "sshpass installed!"
      (sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no root@${SERVER_ADDRESS} "ls -1qp /home/${WHM_ACCOUNT_NAME}/public_html | grep -q .") && echo "Site has already been built, exiting..." && exit
      which zip || ( apt-get update -y && apt-get install zip -y )
      echo "zip installed!"
      zip -r site_archive.zip public_html -x "public_html/.htaccess"
      sshpass -p $SSH_PASSWORD scp -v -r site_archive.zip root@${SERVER_ADDRESS}:/home/${WHM_ACCOUNT_NAME}/
      sshpass -p $SSH_PASSWORD ssh root@${SERVER_ADDRESS} "ls /home/${WHM_ACCOUNT_NAME} && unzip -o -d /home/${WHM_ACCOUNT_NAME}/ /home/${WHM_ACCOUNT_NAME}/site_archive.zip"

deploy-prod:
  stage: deploy
  image: ubuntu
  dependencies: []
  rules:
    - if: $DEPLOY_TARGET != "wpengine"
      when: on_success
      allow_failure: false
  script:
    - |
      which sshpass || ( apt-get update -y && apt-get install sshpass -y )
      echo "sshpass installed!"
      which zip || ( apt-get update -y && apt-get install zip -y )
      echo "zip installed!"
      export THEME_PATH=$(find . -type f -name 'gulpfile.js' -not \( -path */node_modules/* -prune \) -print -quit | sed 's/gulpfile.js//')
      ([ "$THEME_PATH" != "" ] && [ "$THEME_PATH" != "./" ] && cd $THEME_PATH && cd ../ && zip -r changes_archive.zip ./ -x ".gitlab-ci.yml" -x "README.md" -x ".git/*" -x "*/acf-json/*") || zip -r changes_archive.zip ./ -x ".gitlab-ci.yml" -x "README.md" -x ".git/*" -x "*/acf-json/*"
      sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no root@${SERVER_ADDRESS} && sshpass -p $SSH_PASSWORD scp -v -r $(find . -type f -name 'changes_archive.zip') root@${SERVER_ADDRESS}:/home/${WHM_ACCOUNT_NAME}/
      sshpass -p $SSH_PASSWORD ssh root@${SERVER_ADDRESS} "ls /home/${WHM_ACCOUNT_NAME} && unzip -o -d /home/${WHM_ACCOUNT_NAME}/public_html/wp-content/themes/ /home/${WHM_ACCOUNT_NAME}/changes_archive.zip"

deploy-demo:
  stage: deploy
  image: ubuntu
  dependencies: []
  rules:
    - if: $WHM_ACCOUNT_NAME == "upcore"
      when: on_success
      allow_failure: false
  script:
    - which sshpass || ( apt-get update -y && apt-get install sshpass -y )
    - echo "sshpass installed!"
    - which zip || ( apt-get update -y && apt-get install zip -y )
    - echo "zip installed!"
    - export THEME_PATH=$(find . -type f -name 'gulpfile.js' -not \( -path */node_modules/* -prune \) -print -quit | sed 's/gulpfile.js//')
    - ([ "$THEME_PATH" != "" ] && [ "$THEME_PATH" != "./" ] && cd $THEME_PATH && cd ../ && zip -r changes_archive.zip ./ -x ".gitlab-ci.yml" -x "README.md" -x ".git/*" -x "*/acf-json/*") || zip -r changes_archive.zip ./ -x ".gitlab-ci.yml" -x "README.md" -x ".git/*" -x "*/acf-json/*"
    - sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no root@${SERVER_ADDRESS} && sshpass -p $SSH_PASSWORD scp -v -r $(find . -type f -name 'changes_archive.zip') root@${SERVER_ADDRESS}:/home/upcoredemo/
    - sshpass -p $SSH_PASSWORD ssh root@${SERVER_ADDRESS} "ls /home/upcoredemo && unzip -o -d /home/upcoredemo/public_html/wp-content/themes/ /home/upcoredemo/changes_archive.zip"
