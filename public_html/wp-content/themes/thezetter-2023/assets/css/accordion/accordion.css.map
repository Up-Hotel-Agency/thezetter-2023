{"version":3,"sources":["../src/sass/utilities/_placeholders.scss","accordion/accordion.scss","../src/sass/utilities/_mixins.scss","../src/sass/base/colors/__colors-core.scss","../src/sass/base/typography/type-scales/_type-scales.scss"],"names":[],"mappings":"AAAA,uJACI,mCAAA,CAAA,2BAAA,CCCJ,WACI,aAAA,CACA,eAAA,CAEA,4BACI,cAAA,CACA,iBAAA,CAGA,kCACI,SAAA,CAEJ,qCACI,kBAAA,CCVJ,wBDSA,qCAIQ,oBAAA,CAAA,CAGR,6CACI,iBAAA,CACA,OAAA,CACA,kCAAA,CAAA,0BAAA,CACA,OAAA,CACA,QAAA,CAEJ,2HAII,iBAAA,CE2DJ,aAAA,CACA,gCAAA,CF1DI,QAAA,CACA,kBAAA,CGqBR,gBAAA,CACA,8CAAA,CHnBQ,eAAA,CCjCJ,wBDuBA,2HGiCA,mBAAA,CAAA,CFxDA,wBDuBA,2HAaQ,gBAAA,CAAA,CAIJ,mLAII,iCAAA,CAEJ,gDACI,YAAA,CAIJ,mJEmCJ,UAAA,CACA,0CAAA,CF9BI,wCE6BJ,iBAAA,CACA,iDAAA,CF3BQ,4CE0BR,UAAA,CACA,0CAAA,CFrBI,+IEoBJ,UAAA,CACA,0CAAA,CFfI,uCEcJ,iBAAA,CACA,iDAAA,CFZQ,2CEWR,UAAA,CACA,0CAAA,CFVY,gCAAA,CAAA,wBAAA,CAKhB,8BACI,YAAA,CACA,qBAAA,CAEA,8CACI,4BAAA,CAEJ,gCACI,cAAA,CEJJ,aAAA,CACA,gCAAA,CFMA,uFAEI,eAAA,CAGR,4BACI,uBAAA,CEbA,4BAAA,CACA,sDAAA,CDvFA,wBDkGJ,4BAKQ,kBAAA,CAAA,CAIJ,mCACI,WAAA,CAEA,wCACI,SAAA,CAOZ,0CACI,eAAA,CCvHA,wBDsHJ,0CAIQ,cAAA,CACA,kBAAA,CAAA,CAGR,kCACI,eAAA,CACA,QAAA,CChIA,wBD8HJ,kCAKQ,eAAA,CAAA,CAGR,6BACI,kBAAA,CAAA,mBAAA,CAAA,WAAA,CACA,QAAA,CAGA,4DACI,kBAAA,CC5IJ,wBD2IA,4DAIQ,eAAA,CAAA,CAKR,4DACI,iBAAA,CACA,2BAAA,CAAA,gBAAA,CAAA,OAAA,CCtJJ,wBDoJA,4DAKQ,cAAA,CAAA,CAGR,+CACI,2BAAA,CAAA,gBAAA,CAAA,OAAA,CC7JJ,wBDgKI,4DACI,2BAAA,CAAA,gBAAA,CAAA,OAAA,CAEJ,+CACI,2BAAA,CAAA,gBAAA,CAAA,OAAA,CAAA","file":"accordion.css","sourcesContent":["%transition {\n    transition: all 0.3s ease-out;\n}\n\n%link-transition {\n    transition: transform 0.3s cubic-bezier(0, 0, 0.21, 0.99), opacity 0.3s cubic-bezier(0, 0, 0.21, 1);\n}\n\n%button-transition {\n    transition: all 0.3s cubic-bezier(0, 0, 0.21, 1);\n}\n\n%nav-transition {\n    transition: all 1s cubic-bezier(0.59, 0, 0.06, 1);\n}\n\n%slow-transition {\n    transition: all 3s ease-in-out;\n}","@import \"../gutenberg_block\";\n\n.accordion {\n    margin: 0 auto;\n    max-width: 50rem;\n\n    .accordion-title {\n        cursor: pointer;\n        position: relative;\n        @extend %transition;\n\n        &:focus {\n            outline: 0;\n        }\n        &.has-icon {\n            padding-right: 5rem;\n\n            @include breakpoint(XS) {\n                padding-right: 3.5rem;\n            }\n        }\n        span.button.icon {\n            position: absolute;\n            top: 50%;\n            transform: translateY(-50%);\n            right: 0;\n            margin: 0;\n        }\n        h3,\n        h4,\n        h5,\n        p {\n            font-style: normal;\n            @include color(color, 'body');\n            margin: 0;\n            padding: 2.444rem 0;\n            @extend %transition;\n            @include size-L;\n            font-weight: 700;\n\n            @include breakpoint(XS) {\n                padding: 1.5rem 0;\n            }\n        }\n        &.inner-padding {\n            h3,\n            h4,\n            h5,\n            p {\n                padding: 1.5rem 5rem 1.5rem 1.5rem;\n            }\n            .icon {\n                right: 1.5rem;\n            }\n        }\n        &:hover {\n            h3,\n            h4,\n            h5,\n            p {\n                @include color(color, 'accent-primary');\n            }\n            .icon {\n                @include color(border-color, 'accent-primary');\n\n                svg {\n                    @include color(color, 'accent-primary');\n                }\n            }\n        }\n        &.open {\n            h3,\n            h4,\n            h5,\n            p {\n                @include color(color, 'accent-primary');\n            }\n            .icon {\n                @include color(border-color, 'accent-primary');\n\n                svg {\n                    @include color(color, 'accent-primary');\n                    transform: rotate(180deg);\n                }\n            }\n        }\n    }\n    .accordion-content {\n        display: none;\n        padding-bottom: 1.5rem;\n\n        &.inner-accordion {\n            padding: 1rem 3rem 1.5em 3rem;\n        }\n        p {\n            max-width: none;\n            @include color(color, 'body');\n        }\n        p:last-child,\n        ul:last-child {\n            margin-bottom: 0;\n        }\n    }\n    .accordion-group {\n        border-bottom: 1px solid;\n        @include color(border-color, 'body-10');\n\n        @include breakpoint(XS) {\n            margin-bottom: 1rem;\n        }\n    }\n    &.opened {\n        .accordion-title {\n            opacity: 0.25;\n\n            &.open {\n                opacity: 1;\n            }\n        }       \n    }\n}\n\n.accordion-lockup {\n    .content-lockup-wrapper {\n        max-width: 24rem;\n\n        @include breakpoint(S) {\n            max-width: none;\n            margin-bottom: 1rem;\n        }\n    }\n    .content-lockup {\n        position: sticky;\n        top: 7rem;\n\n        @include breakpoint(S) {\n            position: static;\n        }\n    }\n    .accordion {\n        flex-grow: 1;\n        margin: 0;\n    }\n    &.content-accordion {\n        .content-lockup-wrapper {\n            padding-right: 4rem;\n\n            @include breakpoint(S) {\n                padding-right: 0;\n            }\n        }\n    }\n    &.accordion-content {\n        .content-lockup-wrapper {\n            padding-left: 4rem;\n            order: 2;\n\n            @include breakpoint(S) {\n                padding-left: 0;\n            }\n        }\n        .accordion {\n            order: 1;\n        }\n        @include breakpoint(S) {\n            .content-lockup-wrapper {\n                order: 1;\n            }\n            .accordion {\n                order: 2;\n            }\n        }\n    }\n}","$unit: 0.5rem;\n\n//Shortcut for Media Queries\n@mixin breakpoint($name) {\n    @if map-has-key($breakpoints, $name) {\n        @media #{inspect(map-get($breakpoints, $name))} {\n            @content;\n        }\n    }\n    @else {\n        @warn \"Couldn't find a breakpoint named `#{$name}`.\";\n    }\n}\n\n//Generates vendor prefixes for placeholders\n@mixin placeholder {\n    &::-webkit-input-placeholder {@content};\n    &:-moz-placeholder           {@content};\n    &::-moz-placeholder          {@content};\n    &:-ms-input-placeholder      {@content};\n}\n\n@function map-deep-get($map, $keys...) {\n    @each $key in $keys {\n        $map: map-get($map, $key);\n    }\n    @return $map;\n}\n\n//Math function for indices (ie. multiply a value by itself)\n@function pow($number, $exponent) {\n    $value: 1;\n\n    @if $exponent > 0 {\n        @for $i from 1 through $exponent {\n        $value: $value * $number;\n        }\n    }\n\n    @return $value;\n}","//Configure your project's core colour palette here\n// ================================================\n\n$color-body: #000410;\n$color-background: #F2ECE6;\n$color-background-alt: #F2F2F3;\n$color-accent-primary: #000000;\n$color-accent-secondary: #525535;\n$color-buttons: linear-gradient(0deg, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), linear-gradient(0deg, #56593B, #56593B);\n$color-footer: #101921;\n\n$color-success: #4CC27B;\n$color-warning: #EEBE43;\n$color-error: #DE3C4B;\n\n// Define your standard colour variables here\n// ================================================\n\n$color-vars: (\n  buttons: $color-buttons,\n  footer: $color-footer,\n\n  body: $color-body,\n  body-75: rgba($color-body, 0.75),\n  body-50: rgba($color-body, 0.50),\n  body-25: rgba($color-body, 0.25),\n  body-10: rgba($color-body, 0.10),\n  body-05: rgba($color-body, 0.05),\n  body-01: rgba($color-body, 0.01),\n\n  background: $color-background,\n  background-75: rgba($color-background, 0.75),\n  background-50: rgba($color-background, 0.5),\n  background-25: rgba($color-background, 0.25),\n  background-10: rgba($color-background, 0.10),\n  background-05: rgba($color-background, 0.05),\n  background-01: rgba($color-background, 0.01),\n\n  background-alt: $color-background-alt,\n\n  accent-primary: $color-accent-primary,\n  accent-primary-lightest: mix($color-accent-primary, #FFF, 25%),\n  accent-primary-lighter: mix($color-accent-primary, #FFF, 50%),\n  accent-primary-light: mix($color-accent-primary, #FFF, 87.5%),\n  accent-primary-dark: mix($color-accent-primary, #000, 87.5%),\n  accent-primary-darker: mix($color-accent-primary, #000, 50%),\n  accent-primary-darkest: mix($color-accent-primary, #000, 25%),\n\n  accent-reverse: $color-background,\n  accent-reverse-alt: $color-body,\n\n  success: $color-success,\n  success-lightest: mix($color-success, #FFF, 25%),\n  success-lighter: mix($color-success, #FFF, 50%),\n  success-light: mix($color-success, #FFF, 87.5%),\n  success-dark: mix($color-success, #000, 87.5%),\n  success-darker: mix($color-success, #000, 50%),\n  success-darkest: mix($color-success, #000, 25%),\n\n  warning: $color-warning,\n  warning-lightest: mix($color-warning, #FFF, 25%),\n  warning-lighter: mix($color-warning, #FFF, 50%),\n  warning-light: mix($color-warning, #FFF, 87.5%),\n  warning-dark: mix($color-warning, #000, 87.5%),\n  warning-darker: mix($color-warning, #000, 50%),\n  warning-darkest: mix($color-warning, #000, 25%),\n\n  error: $color-error,\n  error-lightest: mix($color-error, #FFF, 25%),\n  error-lighter: mix($color-error, #FFF, 50%),\n  error-light: mix($color-error, #FFF, 87.5%),\n  error-dark: mix($color-error, #000, 87.5%),\n  error-darker: mix($color-error, #000, 50%),\n  error-darkest: mix($color-error, #000, 25%),\n);\n\n// A mixin that gives you an appropriate fallback for browsers that don't support CSS variables (basically just IE)\n// Usage example:\n//  @include color(background-color, 'accent-primary', #333);\n// outputs:\n//  background-color: #333;\n//  background-color: var(--accent-primary, #333);\n//\n// Tip: You don't need to include a fallback variable for most cases â€“ you only need to use it when your desired\n//      IE fallback isn't the standard default value (e.g. setting text colour over an image background)\n\n@mixin color($property, $color, $fallback: null) {\n    @if $fallback {\n        #{$property}: #{$fallback};\n        #{$property}: var(--color-#{$color}, #{$fallback});\n    } @else {\n        #{$property}: map-deep-get($color-vars, $color);\n        #{$property}: var(--color-#{$color}, map-get($color-vars, $color));\n    }\n}","//Choose type scale values you wish to use for desktop sizes\n@import '16px/type-scale-16px-1.333';\n\n//Fudge a placeholder so we can redefine map to be desktop-specific\n$desktop-placeholder: (\n    placeholder: value,\n);\n\n$desktop: map-merge($type-scale, $desktop-placeholder);\n\n//Choose type scale values you wish to use for mobile sizes\n@import '14px/type-scale-14px-1.25';\n\n//Fudge a placeholder so we can redefine map to be mobile-specific\n$mobile-placeholder: (\n    placeholder: value,\n);\n\n$mobile: map-merge($type-scale, $mobile-placeholder);\n\n\n\n//Define Size mixins here\n//====================================================\n\n@mixin size-XS() {\n    font-size: map-deep-get($desktop, 'sizes', 'XS'); //Fallback for browsers that don't support clamp\n    font-size: clamp(#{map-deep-get($mobile, 'sizes', 'XS')}, #{map-get($desktop, 'scale-ratio')}vw, #{map-deep-get($desktop, 'sizes', 'XS')});\n    \n    //Mobile sizes\n    @include breakpoint(S) {\n        font-size: map-deep-get($mobile, 'sizes', 'XS');\n    }\n};\n  \n@mixin size-S() {\n    font-size: map-deep-get($desktop, 'sizes', 'S'); //Fallback for browsers that don't support clamp\n    font-size: clamp(#{map-deep-get($mobile, 'sizes', 'S')}, #{map-get($desktop, 'scale-ratio')}vw, #{map-deep-get($desktop, 'sizes', 'S')});\n    \n    //Mobile sizes\n    @include breakpoint(S) {\n        font-size: map-deep-get($mobile, 'sizes', 'S');\n    };\n};\n  \n@mixin size-M() {\n    font-size: map-deep-get($desktop, 'sizes', 'M'); //Fallback for browsers that don't support clamp\n    font-size: clamp(#{map-deep-get($mobile, 'sizes', 'M')}, #{map-get($desktop, 'scale-ratio')}vw, #{map-deep-get($desktop, 'sizes', 'M')});\n        \n    //Mobile sizes\n    @include breakpoint(S) {\n        font-size: map-deep-get($mobile, 'sizes', 'M');\n    };\n};\n  \n@mixin size-L() {\n    font-size: map-deep-get($desktop, 'sizes', 'L'); //Fallback for browsers that don't support clamp\n    font-size: clamp(#{map-deep-get($mobile, 'sizes', 'L')}, #{pow(map-get($desktop, 'scale-ratio'), 2)}vw, #{map-deep-get($desktop, 'sizes', 'L')});\n    \n    //Mobile sizes\n    @include breakpoint(S) {\n        font-size: map-deep-get($mobile, 'sizes', 'L');\n    };\n};\n  \n@mixin size-XL() {\n    font-size: map-deep-get($desktop, 'sizes', 'XL'); //Fallback for browsers that don't support clamp\n    font-size: clamp(#{map-deep-get($mobile, 'sizes', 'XL')}, #{pow(map-get($desktop, 'scale-ratio'), 3)}vw, #{map-deep-get($desktop, 'sizes', 'XL')});\n    \n    //Mobile sizes\n    @include breakpoint(S) {\n        font-size: map-deep-get($mobile, 'sizes', 'XL');\n    };\n};\n\n\n@mixin size-2XL() {\n    font-size: map-deep-get($desktop, 'sizes', '2XL'); //Fallback for browsers that don't support clamp\n    font-size: clamp(#{map-deep-get($mobile, 'sizes', '2XL')}, #{pow(map-get($desktop, 'scale-ratio'), 4)}vw, #{map-deep-get($desktop, 'sizes', '2XL')});\n    \n    //Mobile sizes\n    @include breakpoint(S) {\n        font-size: map-deep-get($mobile, 'sizes', '2XL');\n    };\n};\n\n@mixin size-3XL() {\n    font-size: map-deep-get($desktop, 'sizes', \"3XL\"); //Fallback for browsers that don't support clamp\n    font-size: clamp(#{map-deep-get($mobile, 'sizes', \"3XL\")}, #{pow(map-get($desktop, 'scale-ratio'), 5)}vw, #{map-deep-get($desktop, 'sizes', \"3XL\")});\n    \n    //Mobile sizes\n    @include breakpoint(S) {\n        font-size: map-deep-get($mobile, 'sizes', \"3XL\");\n    };\n};"]}