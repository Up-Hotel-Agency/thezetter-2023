{"version":3,"sources":["../src/sass/utilities/_placeholders.scss","callouts/callouts.scss","../src/sass/utilities/_mixins.scss","../src/sass/base/colors/__colors-core.scss"],"names":[],"mappings":"AAYA,kCACI,wDAAA,CAAA,gDAAA,CCXJ,UACI,eAAA,CACA,gBAAA,CACA,iBAAA,CAGJ,SACI,oBAAA,CACA,qBAAA,CACA,UAAA,CACA,qBAAA,CACA,6CAAA,CAEA,oBACI,eAAA,CCXA,wBDGR,SAWQ,uBAAA,CAAA,CAEJ,gBACI,kBAAA,CAEJ,8BAEI,iBAAA,CACA,SAAA,CAEJ,aACI,SAAA,CAGA,kCACI,UAAA,CACA,iBAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,WAAA,CACA,SAAA,CAEA,kBEvCC,CFwCD,uBAAA,CACA,UAAA,CAEJ,oCACI,SAAA,CAGR,eACI,qCAAA,CAAA,6BAAA","file":"callouts.css","sourcesContent":["%transition {\n    transition: all 0.3s ease-out;\n}\n\n%link-transition {\n    transition: transform 0.3s cubic-bezier(0, 0, 0.21, 0.99), opacity 0.3s cubic-bezier(0, 0, 0.21, 1);\n}\n\n%button-transition {\n    transition: all 0.3s cubic-bezier(0, 0, 0.21, 1);\n}\n\n%nav-transition {\n    transition: all 1s cubic-bezier(0.59, 0, 0.06, 1);\n}\n\n%slow-transition {\n    transition: all 3s ease-in-out;\n}","@import \"../gutenberg_block\";\n\n.callouts {\n    max-width: 50rem;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.callout {\n    margin-bottom: 1.5rem;\n    padding: 2.125rem 2rem;\n    width: 100%;\n    will-change: transform;\n    background-color: var(--card-color-background);\n\n    &:last-child {\n        margin-bottom: 0;\n    }\n    @include breakpoint(XS) {\n        padding: 1.5rem 1.125rem;\n    }\n    header {\n        padding-right: 2rem;\n    }\n    header,\n    span {\n        position: relative;\n        z-index: 3;\n    }\n    img {\n        z-index: 1;\n    }\n    &.theme__card--image {\n        &:after {\n            content: \"\";\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            z-index: 2;\n            @extend %nav-transition;\n            background: $color-body;\n            mix-blend-mode: multiply;\n            opacity: 0.4;\n        }\n        .button {\n            z-index: 5;\n        }\n    }\n    &:hover {\n        transform: translateX(0.25rem);\n    }\n}","$unit: 0.5rem;\n\n//Shortcut for Media Queries\n@mixin breakpoint($name) {\n    @if map-has-key($breakpoints, $name) {\n        @media #{inspect(map-get($breakpoints, $name))} {\n            @content;\n        }\n    }\n    @else {\n        @warn \"Couldn't find a breakpoint named `#{$name}`.\";\n    }\n}\n\n\n\n//Generates vendor prefixes for placeholders\n@mixin placeholder {\n    &::-webkit-input-placeholder {@content};\n    &:-moz-placeholder           {@content};\n    &::-moz-placeholder          {@content};\n    &:-ms-input-placeholder      {@content};\n}\n\n@function map-deep-get($map, $keys...) {\n    @each $key in $keys {\n        $map: map-get($map, $key);\n    }\n    @return $map;\n}\n\n//Math function for indices (ie. multiply a value by itself)\n@function pow($number, $exponent) {\n    $value: 1;\n\n    @if $exponent > 0 {\n        @for $i from 1 through $exponent {\n        $value: $value * $number;\n        }\n    }\n\n    @return $value;\n}","//Configure your project's core colour palette here\n// ================================================\n\n$color-body: #000410;\n$color-background: #F2ECE6;\n$color-background-alt: #F2F2F3;\n$color-accent-primary: #000000;\n$color-accent-secondary: #525535;\n$color-buttons: #45472E;\n$color-footer: #101921;\n\n$color-success: #4CC27B;\n$color-warning: #EEBE43;\n$color-error: #DE3C4B;\n\n// Define your standard colour variables here\n// ================================================\n\n$color-vars: (\n  buttons: $color-buttons,\n  footer: $color-footer,\n  footer-75: rgba($color-footer, 0.75),\n  footer-50: rgba($color-footer, 0.50),\n  footer-25: rgba($color-footer, 0.25),\n  footer-10: rgba($color-footer, 0.10),\n  footer-05: rgba($color-footer, 0.05),\n  footer-01: rgba($color-footer, 0.01),\n\n  body: $color-body,\n  body-75: rgba($color-body, 0.75),\n  body-50: rgba($color-body, 0.50),\n  body-25: rgba($color-body, 0.25),\n  body-10: rgba($color-body, 0.10),\n  body-05: rgba($color-body, 0.05),\n  body-01: rgba($color-body, 0.01),\n\n  background: $color-background,\n  background-75: rgba($color-background, 0.75),\n  background-50: rgba($color-background, 0.5),\n  background-25: rgba($color-background, 0.25),\n  background-10: rgba($color-background, 0.10),\n  background-05: rgba($color-background, 0.05),\n  background-01: rgba($color-background, 0.01),\n\n  background-alt: $color-background-alt,\n  \n  accent-secondary: $color-accent-secondary,\n  accent-primary: $color-accent-primary,\n  accent-primary-lightest: mix($color-accent-primary, #FFF, 25%),\n  accent-primary-lighter: mix($color-accent-primary, #FFF, 50%),\n  accent-primary-light: mix($color-accent-primary, #FFF, 87.5%),\n  accent-primary-dark: mix($color-accent-primary, #000, 87.5%),\n  accent-primary-darker: mix($color-accent-primary, #000, 50%),\n  accent-primary-darkest: mix($color-accent-primary, #000, 25%),\n\n  accent-reverse: $color-background,\n  accent-reverse-alt: $color-body,\n\n  success: $color-success,\n  success-lightest: mix($color-success, #FFF, 25%),\n  success-lighter: mix($color-success, #FFF, 50%),\n  success-light: mix($color-success, #FFF, 87.5%),\n  success-dark: mix($color-success, #000, 87.5%),\n  success-darker: mix($color-success, #000, 50%),\n  success-darkest: mix($color-success, #000, 25%),\n\n  warning: $color-warning,\n  warning-lightest: mix($color-warning, #FFF, 25%),\n  warning-lighter: mix($color-warning, #FFF, 50%),\n  warning-light: mix($color-warning, #FFF, 87.5%),\n  warning-dark: mix($color-warning, #000, 87.5%),\n  warning-darker: mix($color-warning, #000, 50%),\n  warning-darkest: mix($color-warning, #000, 25%),\n\n  error: $color-error,\n  error-lightest: mix($color-error, #FFF, 25%),\n  error-lighter: mix($color-error, #FFF, 50%),\n  error-light: mix($color-error, #FFF, 87.5%),\n  error-dark: mix($color-error, #000, 87.5%),\n  error-darker: mix($color-error, #000, 50%),\n  error-darkest: mix($color-error, #000, 25%),\n);\n\n// A mixin that gives you an appropriate fallback for browsers that don't support CSS variables (basically just IE)\n// Usage example:\n//  @include color(background-color, 'accent-primary', #333);\n// outputs:\n//  background-color: #333;\n//  background-color: var(--accent-primary, #333);\n//\n// Tip: You don't need to include a fallback variable for most cases â€“ you only need to use it when your desired\n//      IE fallback isn't the standard default value (e.g. setting text colour over an image background)\n\n@mixin color($property, $color, $fallback: null) {\n    @if $fallback {\n        #{$property}: #{$fallback};\n        #{$property}: var(--color-#{$color}, #{$fallback});\n    } @else {\n        #{$property}: map-deep-get($color-vars, $color);\n        #{$property}: var(--color-#{$color}, map-get($color-vars, $color));\n    }\n}"]}