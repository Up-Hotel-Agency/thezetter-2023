{"version":3,"sources":["../src/sass/utilities/_placeholders.scss","../src/sass/utilities/_mixins.scss","neighbourhood/neighbourhood.scss","../src/sass/base/typography/type-scales/_type-scales.scss","../src/sass/base/colors/__colors-core.scss"],"names":[],"mappings":"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","file":"neighbourhood.css","sourcesContent":["%transition {\n    transition: all 0.3s ease-out;\n}\n\n%link-transition {\n    transition: transform 0.3s cubic-bezier(0, 0, 0.21, 0.99), opacity 0.3s cubic-bezier(0, 0, 0.21, 1);\n}\n\n%button-transition {\n    transition: all 0.3s cubic-bezier(0, 0, 0.21, 1);\n}\n\n%nav-transition {\n    transition: all 1s cubic-bezier(0.59, 0, 0.06, 1);\n}\n\n%slow-transition {\n    transition: all 3s ease-in-out;\n}","$unit: 0.5rem;\n\n//Shortcut for Media Queries\n@mixin breakpoint($name) {\n    @if map-has-key($breakpoints, $name) {\n        @media #{inspect(map-get($breakpoints, $name))} {\n            @content;\n        }\n    }\n    @else {\n        @warn \"Couldn't find a breakpoint named `#{$name}`.\";\n    }\n}\n\n\n\n//Generates vendor prefixes for placeholders\n@mixin placeholder {\n    &::-webkit-input-placeholder {@content};\n    &:-moz-placeholder           {@content};\n    &::-moz-placeholder          {@content};\n    &:-ms-input-placeholder      {@content};\n}\n\n@function map-deep-get($map, $keys...) {\n    @each $key in $keys {\n        $map: map-get($map, $key);\n    }\n    @return $map;\n}\n\n//Math function for indices (ie. multiply a value by itself)\n@function pow($number, $exponent) {\n    $value: 1;\n\n    @if $exponent > 0 {\n        @for $i from 1 through $exponent {\n        $value: $value * $number;\n        }\n    }\n\n    @return $value;\n}","@import \"../gutenberg_block\";\n\n.explore-map-carousels {\n    @include breakpoint(XS) {\n        height: calc(100% - 3.5rem); //full height minus header\n    }\n    .explore-map-container {\n        width: 65%;\n        position: relative;\n\n        @include breakpoint(M) {\n            width: 60%;\n        }\n        @include breakpoint(S) {\n            width: 55%;\n        }\n        @include breakpoint(XS) {\n            width: 100%;\n            flex-grow: 1;\n        }\n        .explore-map {\n            position: relative;\n            width: 100%;\n            height: 38.5rem;\n            background: #e2e2e2;\n\n            @include breakpoint(XS) {\n                width: 100%;\n                height: 100%;\n            }\n        }\n    }\n    .explore-carousels {\n        width: 35%;\n        position: relative;\n        z-index: 2;\n\n        @include breakpoint(M) {\n            width: 40%;\n        }\n        @include breakpoint(S) {\n            width: 45%;\n        }\n        @include breakpoint(XS) {\n            width: 100%;\n            min-height: 22rem;\n            display: flex;\n            align-items: center;\n            padding: 1.5rem 0 1.5rem 2rem;\n        }\n        .explore-carousel,\n        .slick-list,\n        .slick-track {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n\n            @include breakpoint(XS) {\n                position: static;\n                height: 20rem;\n            }\n        }\n    }\n}\n\n.explore-carousel-slide {\n    text-align: center;\n    position: relative;\n\n    @include breakpoint(XS) {\n        margin-right: 1rem;\n        width: 20rem;\n    }\n    .button {\n        margin-bottom: 0;\n        margin-top: 1rem;\n\n        @include breakpoint(XS) {\n            margin-top: 0;\n        }\n    }\n    .slide-inner {\n        position: absolute;\n        z-index: 2;\n        top: 0;\n        left: 0;\n        height: 100%;\n        width: 100%;\n        background: rgba(#000, 0.5);\n        padding: 1.625rem 3.125rem;\n\n        h3,\n        p {\n            width: 100%;\n        }\n        @include breakpoint(XS) {\n            h3 {\n                @include size-M;\n\n                .subtitle {\n                    @include size-XS;\n                }\n            }\n            p {\n                @include size-XS;\n            }\n        }\n    }\n    img {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: 1;\n    }\n}\n\n.explore-controls {\n    position: absolute;\n    bottom: 1.5rem;\n    left: 0;\n    width: 100%;\n    z-index: 3;\n    text-align: center;\n\n    .explore-nav {\n        @include color(color, 'body');\n        margin: 0 0.25rem;\n\n        svg {\n            display: block;\n        }\n    }\n}\n\n.explore-nav-wrapper {\n    padding: 0 3rem 2rem 3rem;\n    position: relative;\n\n    h2 {\n        padding-right: 0.5rem;\n    }\n    @include breakpoint(S) {\n        padding: 0 3.5rem 2rem 3.5rem;\n\n        h2.no-margin {\n            margin-bottom: 1rem;\n        }\n    }\n    @include breakpoint(XS) {\n        padding: 0 2rem;\n        height: 3.5rem;\n\n        h2.no-margin {\n            margin-bottom: 0;\n            padding-right: 0;\n            @include size-M;\n        }\n    }\n}\n\n.explore-nav {\n    flex-shrink: 0;\n\n    a {\n        margin: 0 1rem;\n        padding: 0.5rem 0;\n        @include size-XS;\n        font-weight: 700;\n        position: relative;\n        @include color(color, 'body-25');\n\n        @include breakpoint(XS) {\n            margin: 0;\n            padding: 0.5rem 1.5rem 0.5rem 0;\n        }\n        &:after {\n            content: \"\";\n            @extend %transition;\n            left: 50%;\n            transform: translateX(-50%);\n            bottom: 0;\n            width: 0;\n            position: absolute;\n            border-bottom: 1px solid;\n            @include color(border-color, 'accent-primary');\n\n            @include breakpoint(XS) {\n                left: calc(50% - 0.75rem);\n            }\n        }\n        &.active,\n        &:hover {\n            @include color(color, 'accent-primary');\n\n            &:after {\n                width: 100%;\n\n                @include breakpoint(XS) {\n                    width: calc(100% - 1.5rem);\n                }\n            }\n        }\n        &:first-child {\n            margin-left: 0;\n        }\n        &:last-child {\n            margin-right: 0;\n        }\n    }\n}\n\n.explore-nav-mob {\n    overflow: scroll;\n    padding: 1rem 0 1rem 2rem;\n    position: relative;\n\n    &:after {\n        content: \"\";\n        position: absolute;\n        right: 0;\n        top: 0;\n        height: 100%;\n        width: 2rem;\n        z-index: 2;\n        background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, #FFFFFF 100%);\n    }\n}\n\n.explore-mob-close {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 3.5rem;\n    height: 3.5rem;\n    @include color(color, 'background');\n    @include color(background-color, 'body');\n}\n\n.explore-locations {\n    @extend %transition;\n\n    @include breakpoint(XS) {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        opacity: 0;\n        visibility: hidden;\n        @include color(background-color, 'background');\n\n        &.active {\n            opacity: 1;\n            visibility: visible;\n            z-index: 100;\n        }\n    }\n}","//Choose type scale values you wish to use for desktop sizes\n@import '16px/type-scale-16px-1.333';\n\n//Fudge a placeholder so we can redefine map to be desktop-specific\n$desktop-placeholder: (\n    placeholder: value,\n);\n\n$desktop: map-merge($type-scale, $desktop-placeholder);\n\n//Choose type scale values you wish to use for mobile sizes\n@import '14px/type-scale-14px-1.25';\n\n//Fudge a placeholder so we can redefine map to be mobile-specific\n$mobile-placeholder: (\n    placeholder: value,\n);\n\n$mobile: map-merge($type-scale, $mobile-placeholder);\n\n\n\n//Define Size mixins here\n//====================================================\n\n@mixin size-XS() {\n    font-size: map-deep-get($desktop, 'sizes', 'XS'); //Fallback for browsers that don't support clamp\n    font-size: clamp(#{map-deep-get($mobile, 'sizes', 'XS')}, #{map-get($desktop, 'scale-ratio')}vw, #{map-deep-get($desktop, 'sizes', 'XS')});\n    \n    //Mobile sizes\n    @include breakpoint(S) {\n        font-size: map-deep-get($mobile, 'sizes', 'XS');\n    }\n};\n  \n@mixin size-S() {\n    font-size: map-deep-get($desktop, 'sizes', 'S'); //Fallback for browsers that don't support clamp\n    font-size: clamp(#{map-deep-get($mobile, 'sizes', 'S')}, #{map-get($desktop, 'scale-ratio')}vw, #{map-deep-get($desktop, 'sizes', 'S')});\n    \n    //Mobile sizes\n    @include breakpoint(S) {\n        font-size: map-deep-get($mobile, 'sizes', 'S');\n    };\n};\n  \n@mixin size-M() {\n    font-size: map-deep-get($desktop, 'sizes', 'M'); //Fallback for browsers that don't support clamp\n    font-size: clamp(#{map-deep-get($mobile, 'sizes', 'M')}, #{map-get($desktop, 'scale-ratio')}vw, #{map-deep-get($desktop, 'sizes', 'M')});\n        \n    //Mobile sizes\n    @include breakpoint(S) {\n        font-size: map-deep-get($mobile, 'sizes', 'M');\n    };\n};\n  \n@mixin size-L() {\n    font-size: map-deep-get($desktop, 'sizes', 'L'); //Fallback for browsers that don't support clamp\n    font-size: clamp(#{map-deep-get($mobile, 'sizes', 'L')}, #{pow(map-get($desktop, 'scale-ratio'), 2)}vw, #{map-deep-get($desktop, 'sizes', 'L')});\n    \n    //Mobile sizes\n    @include breakpoint(S) {\n        font-size: map-deep-get($mobile, 'sizes', 'L');\n    };\n};\n  \n@mixin size-XL() {\n    font-size: map-deep-get($desktop, 'sizes', 'XL'); //Fallback for browsers that don't support clamp\n    font-size: clamp(#{map-deep-get($mobile, 'sizes', 'XL')}, #{pow(map-get($desktop, 'scale-ratio'), 3)}vw, #{map-deep-get($desktop, 'sizes', 'XL')});\n    \n    //Mobile sizes\n    @include breakpoint(S) {\n        font-size: map-deep-get($mobile, 'sizes', 'XL');\n    };\n};\n\n\n@mixin size-2XL() {\n    font-size: map-deep-get($desktop, 'sizes', '2XL'); //Fallback for browsers that don't support clamp\n    font-size: clamp(#{map-deep-get($mobile, 'sizes', '2XL')}, #{pow(map-get($desktop, 'scale-ratio'), 4)}vw, #{map-deep-get($desktop, 'sizes', '2XL')});\n    \n    //Mobile sizes\n    @include breakpoint(S) {\n        font-size: map-deep-get($mobile, 'sizes', '2XL');\n    };\n};\n\n@mixin size-3XL() {\n    font-size: map-deep-get($desktop, 'sizes', \"3XL\"); //Fallback for browsers that don't support clamp\n    font-size: clamp(#{map-deep-get($mobile, 'sizes', \"3XL\")}, #{pow(map-get($desktop, 'scale-ratio'), 5)}vw, #{map-deep-get($desktop, 'sizes', \"3XL\")});\n    \n    //Mobile sizes\n    @include breakpoint(S) {\n        font-size: map-deep-get($mobile, 'sizes', \"3XL\");\n    };\n};","//Configure your project's core colour palette here\n// ================================================\n\n$color-body: #000410;\n$color-background: #F2ECE6;\n$color-background-alt: #F2F2F3;\n$color-accent-primary: #000000;\n$color-accent-secondary: #525535;\n$color-buttons: #45472E;\n$color-footer: var(--color-footer);\n\n$color-success: #4CC27B;\n$color-warning: #EEBE43;\n$color-error: #DE3C4B;\n\n// Define your standard colour variables here\n// ================================================\n\n$color-vars: (\n  buttons: $color-buttons,\n  footer: $color-footer,\n  footer-75: color-mix(in SRGB, var($color-footer) 25%, #FFF),\n  footer-50: color-mix(in SRGB, var($color-footer) 50%, #FFF),\n  footer-25: color-mix(in SRGB, var($color-footer) 87.5%, #FFF),\n  footer-10: color-mix(in SRGB, var($color-accent-primary) 87.5%, #000),\n  footer-05: color-mix(in SRGB, var($color-accent-primary) 50%, #000),\n  footer-01: color-mix(in SRGB, var($color-accent-primary) 25%, #000),\n\n  body: $color-body,\n  body-75: rgba($color-body, 0.75),\n  body-50: rgba($color-body, 0.50),\n  body-25: rgba($color-body, 0.25),\n  body-10: rgba($color-body, 0.10),\n  body-05: rgba($color-body, 0.05),\n  body-01: rgba($color-body, 0.01),\n\n  background: $color-background,\n  background-75: rgba($color-background, 0.75),\n  background-50: rgba($color-background, 0.5),\n  background-25: rgba($color-background, 0.25),\n  background-10: rgba($color-background, 0.10),\n  background-05: rgba($color-background, 0.05),\n  background-01: rgba($color-background, 0.01),\n\n  background-alt: $color-background-alt,\n  \n  accent-secondary: $color-accent-secondary,\n  accent-primary: $color-accent-primary,\n  accent-primary-lightest: mix($color-accent-primary, #FFF, 25%),\n  accent-primary-lighter: mix($color-accent-primary, #FFF, 50%),\n  accent-primary-light: mix($color-accent-primary, #FFF, 87.5%),\n  accent-primary-dark: mix($color-accent-primary, #000, 87.5%),\n  accent-primary-darker: mix($color-accent-primary, #000, 50%),\n  accent-primary-darkest: mix($color-accent-primary, #000, 25%),\n\n  accent-reverse: $color-background,\n  accent-reverse-alt: $color-body,\n\n  success: $color-success,\n  success-lightest: mix($color-success, #FFF, 25%),\n  success-lighter: mix($color-success, #FFF, 50%),\n  success-light: mix($color-success, #FFF, 87.5%),\n  success-dark: mix($color-success, #000, 87.5%),\n  success-darker: mix($color-success, #000, 50%),\n  success-darkest: mix($color-success, #000, 25%),\n\n  warning: $color-warning,\n  warning-lightest: mix($color-warning, #FFF, 25%),\n  warning-lighter: mix($color-warning, #FFF, 50%),\n  warning-light: mix($color-warning, #FFF, 87.5%),\n  warning-dark: mix($color-warning, #000, 87.5%),\n  warning-darker: mix($color-warning, #000, 50%),\n  warning-darkest: mix($color-warning, #000, 25%),\n\n  error: $color-error,\n  error-lightest: mix($color-error, #FFF, 25%),\n  error-lighter: mix($color-error, #FFF, 50%),\n  error-light: mix($color-error, #FFF, 87.5%),\n  error-dark: mix($color-error, #000, 87.5%),\n  error-darker: mix($color-error, #000, 50%),\n  error-darkest: mix($color-error, #000, 25%),\n);\n\n// A mixin that gives you an appropriate fallback for browsers that don't support CSS variables (basically just IE)\n// Usage example:\n//  @include color(background-color, 'accent-primary', #333);\n// outputs:\n//  background-color: #333;\n//  background-color: var(--accent-primary, #333);\n//\n// Tip: You don't need to include a fallback variable for most cases – you only need to use it when your desired\n//      IE fallback isn't the standard default value (e.g. setting text colour over an image background)\n\n@mixin color($property, $color, $fallback: null) {\n    @if $fallback {\n        #{$property}: #{$fallback};\n        #{$property}: var(--color-#{$color}, #{$fallback});\n    } @else {\n        #{$property}: map-deep-get($color-vars, $color);\n        #{$property}: var(--color-#{$color}, map-get($color-vars, $color));\n    }\n}"]}