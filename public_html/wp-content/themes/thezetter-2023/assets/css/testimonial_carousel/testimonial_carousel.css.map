{"version":3,"sources":["testimonial_carousel/testimonial_carousel.scss","../src/sass/utilities/_mixins.scss","../src/sass/base/colors/__colors-core.scss"],"names":[],"mappings":"AAEA,8BACI,iBAAA,CACA,iBAAA,CCCI,wBDHR,8BAKQ,oBAAA,CAAA,CCFA,wBDHR,8BAQQ,oBAAA,CAAA,CAEJ,gEACI,eAAA,CACA,aAAA,CAMA,0DACI,iBAAA,CACA,oBAAA,CCjBJ,wBDeA,0DAKQ,YAAA,CAAA,CCpBR,wBDeA,0DAQQ,iBAAA,CAAA,CAGR,uGAEI,SAAA,CC5BJ,wBD0BA,uGAKQ,UAAA,CAAA,CAIJ,qEACI,2BAAA,CAAA,gBAAA,CAAA,OAAA,CAEJ,wDACI,2BAAA,CAAA,gBAAA,CAAA,OAAA,CAIZ,kCE2CI,aAAA,CACA,gCAAA,CFzCA,wCEwCA,UAAA,CACA,0CAAA,CFrCJ,oCACI,iBAAA,CACA,wCACI,+CAAA,CAAA,uCAAA","file":"testimonial_carousel.css","sourcesContent":["@import \"../gutenberg_block\";\n\n.testimonial-carousel-wrapper {\n    text-align: center;\n    padding: 3rem 6rem;\n\n    @include breakpoint(S) {\n        padding: 2.25rem 3rem;\n    }\n    @include breakpoint(XS) {\n        padding: 2.25rem 2rem;\n    }\n    .testimonial-carousel-slide-inner {\n        max-width: 50rem;\n        margin: 0 auto;\n    }\n}\n\n.testimonial-block {\n    &.with-img {\n        .testimonial-carousel-wrapper {\n            padding-top: 10rem;\n            padding-bottom: 10rem;\n\n            @include breakpoint(S) {\n                padding: 3rem;\n            }\n            @include breakpoint(XS) {\n                padding: 3rem 2rem;\n            }\n        }\n        .testimonial-carousel-wrapper,\n        .media-container{\n            width: 50%;\n\n            @include breakpoint(XS) {\n                width: 100%;\n            }\n        }\n        &.img-quotes {\n            .testimonial-carousel-wrapper {\n                order: 2;\n            }\n            .media-container{\n                order: 1;\n            }\n        }\n    }\n    .slick-control {\n        @include color(color, 'body');\n\n        &:hover {\n            @include color(color, 'accent-primary');\n        }\n    }\n    .media-container{\n        position: relative;\n        img {\n            box-shadow: 4px 8px 24px rgba($color-body, 0.1);\n        }\n    }\n}\n\n","$unit: 0.5rem;\n\n//Shortcut for Media Queries\n@mixin breakpoint($name) {\n    @if map-has-key($breakpoints, $name) {\n        @media #{inspect(map-get($breakpoints, $name))} {\n            @content;\n        }\n    }\n    @else {\n        @warn \"Couldn't find a breakpoint named `#{$name}`.\";\n    }\n}\n\n//Generates vendor prefixes for placeholders\n@mixin placeholder {\n    &::-webkit-input-placeholder {@content};\n    &:-moz-placeholder           {@content};\n    &::-moz-placeholder          {@content};\n    &:-ms-input-placeholder      {@content};\n}\n\n@function map-deep-get($map, $keys...) {\n    @each $key in $keys {\n        $map: map-get($map, $key);\n    }\n    @return $map;\n}\n\n//Math function for indices (ie. multiply a value by itself)\n@function pow($number, $exponent) {\n    $value: 1;\n\n    @if $exponent > 0 {\n        @for $i from 1 through $exponent {\n        $value: $value * $number;\n        }\n    }\n\n    @return $value;\n}","//Configure your project's core colour palette here\n// ================================================\n\n$color-body: #000410;\n$color-background: #F2ECE6;\n$color-background-alt: #F2F2F3;\n$color-accent-primary: #000000;\n$color-accent-secondary: #525535;\n$color-buttons: linear-gradient(0deg, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)), linear-gradient(0deg, #56593B, #56593B);\n$color-footer: #101921;\n\n$color-success: #4CC27B;\n$color-warning: #EEBE43;\n$color-error: #DE3C4B;\n\n// Define your standard colour variables here\n// ================================================\n\n$color-vars: (\n  buttons: $color-buttons,\n  footer: $color-footer,\n\n  body: $color-body,\n  body-75: rgba($color-body, 0.75),\n  body-50: rgba($color-body, 0.50),\n  body-25: rgba($color-body, 0.25),\n  body-10: rgba($color-body, 0.10),\n  body-05: rgba($color-body, 0.05),\n  body-01: rgba($color-body, 0.01),\n\n  background: $color-background,\n  background-75: rgba($color-background, 0.75),\n  background-50: rgba($color-background, 0.5),\n  background-25: rgba($color-background, 0.25),\n  background-10: rgba($color-background, 0.10),\n  background-05: rgba($color-background, 0.05),\n  background-01: rgba($color-background, 0.01),\n\n  background-alt: $color-background-alt,\n\n  accent-primary: $color-accent-primary,\n  accent-primary-lightest: mix($color-accent-primary, #FFF, 25%),\n  accent-primary-lighter: mix($color-accent-primary, #FFF, 50%),\n  accent-primary-light: mix($color-accent-primary, #FFF, 87.5%),\n  accent-primary-dark: mix($color-accent-primary, #000, 87.5%),\n  accent-primary-darker: mix($color-accent-primary, #000, 50%),\n  accent-primary-darkest: mix($color-accent-primary, #000, 25%),\n\n  accent-reverse: $color-background,\n  accent-reverse-alt: $color-body,\n\n  success: $color-success,\n  success-lightest: mix($color-success, #FFF, 25%),\n  success-lighter: mix($color-success, #FFF, 50%),\n  success-light: mix($color-success, #FFF, 87.5%),\n  success-dark: mix($color-success, #000, 87.5%),\n  success-darker: mix($color-success, #000, 50%),\n  success-darkest: mix($color-success, #000, 25%),\n\n  warning: $color-warning,\n  warning-lightest: mix($color-warning, #FFF, 25%),\n  warning-lighter: mix($color-warning, #FFF, 50%),\n  warning-light: mix($color-warning, #FFF, 87.5%),\n  warning-dark: mix($color-warning, #000, 87.5%),\n  warning-darker: mix($color-warning, #000, 50%),\n  warning-darkest: mix($color-warning, #000, 25%),\n\n  error: $color-error,\n  error-lightest: mix($color-error, #FFF, 25%),\n  error-lighter: mix($color-error, #FFF, 50%),\n  error-light: mix($color-error, #FFF, 87.5%),\n  error-dark: mix($color-error, #000, 87.5%),\n  error-darker: mix($color-error, #000, 50%),\n  error-darkest: mix($color-error, #000, 25%),\n);\n\n// A mixin that gives you an appropriate fallback for browsers that don't support CSS variables (basically just IE)\n// Usage example:\n//  @include color(background-color, 'accent-primary', #333);\n// outputs:\n//  background-color: #333;\n//  background-color: var(--accent-primary, #333);\n//\n// Tip: You don't need to include a fallback variable for most cases â€“ you only need to use it when your desired\n//      IE fallback isn't the standard default value (e.g. setting text colour over an image background)\n\n@mixin color($property, $color, $fallback: null) {\n    @if $fallback {\n        #{$property}: #{$fallback};\n        #{$property}: var(--color-#{$color}, #{$fallback});\n    } @else {\n        #{$property}: map-deep-get($color-vars, $color);\n        #{$property}: var(--color-#{$color}, map-get($color-vars, $color));\n    }\n}"]}